{"remainingRequest":"/Users/zhangjiaping/Desktop/project/b-tree/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangjiaping/Desktop/project/b-tree/node_modules/@vuepress/theme-default/components/PageEdit.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/zhangjiaping/Desktop/project/b-tree/node_modules/@vuepress/theme-default/components/PageEdit.vue","mtime":1582616621496},{"path":"/Users/zhangjiaping/Desktop/project/b-tree/node_modules/css-loader/dist/cjs.js","mtime":1582616623676},{"path":"/Users/zhangjiaping/Desktop/project/b-tree/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1582616623963},{"path":"/Users/zhangjiaping/Desktop/project/b-tree/node_modules/postcss-loader/src/index.js","mtime":1582616623811},{"path":"/Users/zhangjiaping/Desktop/project/b-tree/node_modules/stylus-loader/index.js","mtime":1582616625696},{"path":"/Users/zhangjiaping/Desktop/project/b-tree/node_modules/cache-loader/dist/cjs.js","mtime":1582616623457},{"path":"/Users/zhangjiaping/Desktop/project/b-tree/node_modules/vue-loader/lib/index.js","mtime":1582616623963}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAcmVxdWlyZSAnLi4vc3R5bGVzL3dyYXBwZXIuc3R5bCcKCi5wYWdlLWVkaXQKICBAZXh0ZW5kICR3cmFwcGVyCiAgcGFkZGluZy10b3AgMXJlbQogIHBhZGRpbmctYm90dG9tIDFyZW0KICBvdmVyZmxvdyBhdXRvCgogIC5lZGl0LWxpbmsKICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrCiAgICBhCiAgICAgIGNvbG9yIGxpZ2h0ZW4oJHRleHRDb2xvciwgMjUlKQogICAgICBtYXJnaW4tcmlnaHQgMC4yNXJlbQogIC5sYXN0LXVwZGF0ZWQKICAgIGZsb2F0IHJpZ2h0CiAgICBmb250LXNpemUgMC45ZW0KICAgIC5wcmVmaXgKICAgICAgZm9udC13ZWlnaHQgNTAwCiAgICAgIGNvbG9yIGxpZ2h0ZW4oJHRleHRDb2xvciwgMjUlKQogICAgLnRpbWUKICAgICAgZm9udC13ZWlnaHQgNDAwCiAgICAgIGNvbG9yICNhYWEKCkBtZWRpYSAobWF4LXdpZHRoOiAkTVFNb2JpbGUpCiAgLnBhZ2UtZWRpdAogICAgLmVkaXQtbGluawogICAgICBtYXJnaW4tYm90dG9tIDAuNXJlbQogICAgLmxhc3QtdXBkYXRlZAogICAgICBmb250LXNpemUgMC44ZW0KICAgICAgZmxvYXQgbm9uZQogICAgICB0ZXh0LWFsaWduIGxlZnQKCg=="},{"version":3,"sources":["PageEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageEdit.vue","sourceRoot":"node_modules/@vuepress/theme-default/components","sourcesContent":["<template>\n  <footer class=\"page-edit\">\n    <div\n      v-if=\"editLink\"\n      class=\"edit-link\"\n    >\n      <a\n        :href=\"editLink\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >{{ editLinkText }}</a>\n      <OutboundLink />\n    </div>\n\n    <div\n      v-if=\"lastUpdated\"\n      class=\"last-updated\"\n    >\n      <span class=\"prefix\">{{ lastUpdatedText }}:</span>\n      <span class=\"time\">{{ lastUpdated }}</span>\n    </div>\n  </footer>\n</template>\n\n<script>\nimport isNil from 'lodash/isNil'\nimport { endingSlashRE, outboundRE } from '../util'\n\nexport default {\n  name: 'PageEdit',\n\n  computed: {\n    lastUpdated () {\n      return this.$page.lastUpdated\n    },\n\n    lastUpdatedText () {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated\n      }\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated\n      }\n      return 'Last Updated'\n    },\n\n    editLink () {\n      const showEditLink = isNil(this.$page.frontmatter.editLink)\n        ? this.$site.themeConfig.editLinks\n        : this.$page.frontmatter.editLink\n\n      const {\n        repo,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo\n      } = this.$site.themeConfig\n\n      if (showEditLink && docsRepo && this.$page.relativePath) {\n        return this.createEditLink(\n          repo,\n          docsRepo,\n          docsDir,\n          docsBranch,\n          this.$page.relativePath\n        )\n      }\n      return null\n    },\n\n    editLinkText () {\n      return (\n        this.$themeLocaleConfig.editLinkText\n        || this.$site.themeConfig.editLinkText\n        || `Edit this page`\n      )\n    }\n  },\n\n  methods: {\n    createEditLink (repo, docsRepo, docsDir, docsBranch, path) {\n      const bitbucket = /bitbucket.org/\n      if (bitbucket.test(repo)) {\n        const base = outboundRE.test(docsRepo) ? docsRepo : repo\n        return (\n          base.replace(endingSlashRE, '')\n          + `/src`\n          + `/${docsBranch}/`\n          + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\n          + path\n          + `?mode=edit&spa=0&at=${docsBranch}&fileviewer=file-view-default`\n        )\n      }\n\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`\n      return (\n        base.replace(endingSlashRE, '')\n        + `/edit`\n        + `/${docsBranch}/`\n        + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\n        + path\n      )\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@require '../styles/wrapper.styl'\n\n.page-edit\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 1rem\n  overflow auto\n\n  .edit-link\n    display inline-block\n    a\n      color lighten($textColor, 25%)\n      margin-right 0.25rem\n  .last-updated\n    float right\n    font-size 0.9em\n    .prefix\n      font-weight 500\n      color lighten($textColor, 25%)\n    .time\n      font-weight 400\n      color #aaa\n\n@media (max-width: $MQMobile)\n  .page-edit\n    .edit-link\n      margin-bottom 0.5rem\n    .last-updated\n      font-size 0.8em\n      float none\n      text-align left\n\n</style>\n"]}]}