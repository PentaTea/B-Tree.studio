(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{853:function(e,v,t){"use strict";t.r(v);var r=t(6),o=Object(r.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vscode-源码研读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vscode-源码研读"}},[e._v("#")]),e._v(" vscode 源码研读")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/fzxa/VSCode-sourcecode-analysis/master/vscode-vside-zh.png",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"主进程启动流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主进程启动流程"}},[e._v("#")]),e._v(" 主进程启动流程")]),e._v(" "),t("h3",{attrs:{id:"src-main-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#src-main-js"}},[e._v("#")]),e._v(" src/main.js")]),e._v(" "),t("ol",[t("li",[e._v("环境设置\n"),t("ul",[t("li",[e._v("获得一些平台环境的设置，比如 temp 文件的位置和运行参数相关设置")]),e._v(" "),t("li",[e._v("启动 node.asar 的支持")]),e._v(" "),t("li",[e._v("注册并用刚获得的设置启动崩溃日志记录  "),t("code",[e._v("electron::crashReporter")]),e._v("  服务")]),e._v(" "),t("li",[e._v("设置 log 目录，当前运行目录")]),e._v(" "),t("li",[e._v("注册监听服务，监听拖拽到图标打开文件等操作")])])]),e._v(" "),t("li",[e._v("app.once('ready'...\n"),t("ul",[t("li",[e._v("启用内容追踪  "),t("code",[e._v("electron::contentTracing")]),e._v("  性能检测优化相关")]),e._v(" "),t("li",[e._v("尝试获取本地配置信息")]),e._v(" "),t("li",[e._v("检查用户语言环境配置，如果没有设置默认使用英语")]),e._v(" "),t("li",[e._v("加载启动文件  "),t("code",[e._v("vs/code/electron-main/main")])])])])]),e._v(" "),t("h3",{attrs:{id:"src-vs-code-electron-main-main-ts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#src-vs-code-electron-main-main-ts"}},[e._v("#")]),e._v(" src/vs/code/electron-main/main.ts")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("初始化基础服务")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("运行环境服务  "),t("code",[e._v("EnvironmentService")])]),e._v(" "),t("blockquote",[t("p",[e._v("src/vs/platform/environment/node/environmentService.ts")])]),e._v(" "),t("p",[e._v("通过这个服务获取当前启动目录，日志目录，操作系统信息，配置文件目录，用户目录等。")])]),e._v(" "),t("li",[t("p",[e._v("日志服务  "),t("code",[e._v("MultiplexLogService")])]),e._v(" "),t("blockquote",[t("p",[e._v("src/vs/platform/log/common/log.ts")])]),e._v(" "),t("p",[e._v("默认使用控制台日志 ConsoleLogMainService 其中包含性能追踪和释放信息，日志输出级别")])]),e._v(" "),t("li",[t("p",[e._v("配置服务  "),t("code",[e._v("ConfigurationService")])]),e._v(" "),t("blockquote",[t("p",[e._v("src/vs/platform/configuration/node/configurationService.ts")])]),e._v(" "),t("p",[e._v("从运行环境服务获取内容")])]),e._v(" "),t("li",[t("p",[e._v("生命周期服务  "),t("code",[e._v("LifecycleService")])]),e._v(" "),t("blockquote",[t("p",[e._v("src/vs/platform/lifecycle/common/lifecycleService.ts")])]),e._v(" "),t("p",[e._v("监听事件，electron app 模块 比如：ready， window-all-closed，before-quit")]),e._v(" "),t("p",[e._v("可以参考官方 electron app 文档")])]),e._v(" "),t("li",[t("p",[e._v("状态服务  "),t("code",[e._v("StateService")])]),e._v(" "),t("blockquote",[t("p",[e._v("src/vs/platform/state/node/stateService.ts")])]),e._v(" "),t("p",[e._v("通过 FileStorage 读写 storage.json 存储，里记录一些与程序运行状态有关的键值对")])]),e._v(" "),t("li",[t("p",[e._v("请求服务  "),t("code",[e._v("RequestService")])]),e._v(" "),t("blockquote",[t("p",[e._v("src/vs/platform/request/browser/requestService.ts")])]),e._v(" "),t("p",[e._v("这里使用的是原生 ajax 请求，实现了 request 方法")])]),e._v(" "),t("li",[t("p",[e._v("主题服务  "),t("code",[e._v("ThemeMainService")])]),e._v(" "),t("blockquote",[t("p",[e._v("src/vs/platform/theme/electron-main/themeMainService.ts")])]),e._v(" "),t("p",[e._v("这里只设置背景颜色，通过 getBackgroundColor 方法 IStateService 存储")])]),e._v(" "),t("li",[t("p",[e._v("签名服务  "),t("code",[e._v("SignService")])]),e._v(" "),t("blockquote",[t("p",[e._v("src/vs/platform/sign/node/signService.ts")])])])])]),e._v(" "),t("li",[t("p",[e._v("加载 CodeApplication, mainIpcServer, instanceEnvironment")])]),e._v(" "),t("li",[t("p",[e._v("启动 APP")])])]),e._v(" "),t("h3",{attrs:{id:"src-vs-code-electron-main-app-ts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#src-vs-code-electron-main-app-ts"}},[e._v("#")]),e._v(" src/vs/code/electron-main/app.ts")]),e._v(" "),t("p",[e._v("开始处理 app 级别任务，创建窗口，创建 IPC 服务")]),e._v(" "),t("ol",[t("li",[e._v("创建共享进程")]),e._v(" "),t("li",[e._v("创建 app 实例")]),e._v(" "),t("li",[e._v("打开窗口")]),e._v(" "),t("li",[e._v("执行生命周期和授权操作")]),e._v(" "),t("li",[e._v("结束性能问题追踪")])]),e._v(" "),t("h3",{attrs:{id:"src-vs-code-electron-main-window-ts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#src-vs-code-electron-main-window-ts"}},[e._v("#")]),e._v(" src/vs/code/electron-main/window.ts")]),e._v(" "),t("p",[e._v("创建实例窗口，注册窗口监听器和生命周期，启动 Workbench 等渲染进程")]),e._v(" "),t("p",[e._v("主进程流程基本完毕")]),e._v(" "),t("h2",{attrs:{id:"渲染进程启动流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程启动流程"}},[e._v("#")]),e._v(" 渲染进程启动流程")]),e._v(" "),t("p",[e._v("待续 ...")])])}),[],!1,null,null,null);v.default=o.exports}}]);